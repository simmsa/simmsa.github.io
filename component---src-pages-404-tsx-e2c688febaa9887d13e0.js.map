{"version":3,"sources":["webpack:///./src/pages/404.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/theme.ts","webpack:///./src/components/Seo.tsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Footer.tsx","webpack:///./src/components/Header.tsx","webpack:///./src/components/Layout.tsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","_components_Layout__WEBPACK_IMPORTED_MODULE_1__","_components_Seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","title","d","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","a","StaticQueryContext","React","createContext","props","createElement","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","theme","brand_color","SEO","react__WEBPACK_IMPORTED_MODULE_2__","gatsby__WEBPACK_IMPORTED_MODULE_1__","metaDescription","description","site","siteMetadata","keywords","join","otherMeta","meta","additionalMeta","length","concat","property","content","undefined","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","lang","titleTemplate","name","author","link","href","rel","sizes","type","color","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","FooterItem","linkIsValid","style","letterSpacing","Content","subProps","react","className","text","Next","hasSeparator","FooterRow","marginTop","Footer","Footer_FooterRow","Footer_FooterItem","Date","getFullYear","HeaderText","isUppercase","Header","gatsby_browser_entry","background","Navbar_default","variant","backgroundColor","margin","maxWidth","expand","Brand","gatsby_image_default","fixed","file","childImageSharp","alt","Header_HeaderText","siteTitle","Toggle","aria-controls","Collapse","bsPrefix","Nav_default","Link","_1658456242","Layout","Seo","components_Header","padding","paddingTop","components_Footer","_755544856"],"mappings":"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","file":"component---src-pages-404-tsx-e2c688febaa9887d13e0.js","sourcesContent":["import * as React from \"react\";\n\nimport Layout from \"../components/Layout\";\nimport SEO from \"../components/Seo\";\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n);\n\nexport default NotFoundPage;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","const theme = {\n  brand_color: \"#002233\",\n};\n\nexport default theme;\n","import { graphql, StaticQuery } from \"gatsby\";\nimport * as React from \"react\";\nimport Helmet from \"react-helmet\";\n\nimport theme from \"../theme\";\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`;\n\ninterface Meta {\n  property: string;\n  content: string;\n}\n\ninterface SEOMetadata {\n  description?: string;\n  lang?: string;\n  meta?: Meta[];\n  keywords?: string[];\n  title: string;\n}\n\nconst SEO = (props: SEOMetadata) => {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={(data) => {\n        const metaDescription =\n          props.description || data.site.siteMetadata.description;\n\n        const keywords = props.keywords ? props.keywords.join(\", \") : \"\";\n        const otherMeta = props.meta;\n        const additionalMeta: Meta[] = [];\n\n        if (keywords.length > 0) {\n          additionalMeta.concat({ property: \"keywords\", content: keywords });\n        }\n\n        if (otherMeta !== undefined && otherMeta.length > 0) {\n          additionalMeta.concat(otherMeta);\n        }\n\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang: props.lang,\n            }}\n            title={props.title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                content: metaDescription,\n                name: `description`,\n              },\n              {\n                content: props.title,\n                property: `og:title`,\n              },\n              {\n                content: metaDescription,\n                property: `og:description`,\n              },\n              {\n                content: `website`,\n                property: `og:type`,\n              },\n              {\n                content: `summary`,\n                name: `twitter:card`,\n              },\n              {\n                content: data.site.siteMetadata.author,\n                name: `twitter:creator`,\n              },\n              {\n                content: props.title,\n                name: `twitter:title`,\n              },\n              {\n                content: metaDescription,\n                name: `twitter:description`,\n              },\n              {\n                content: theme.brand_color,\n                name: `msappliaction-TileColor`,\n              },\n              {\n                content: theme.brand_color,\n                name: `theme-color`,\n              },\n            ].concat(additionalMeta)}\n            link={[\n              {\n                href: \"/apple-touch-icon.png\",\n                rel: \"apple-touch-icon\",\n                sizes: \"180x180\",\n              },\n              {\n                href: \"/favicon-32x32.png\",\n                rel: \"icon\",\n                sizes: \"32x32\",\n                type: \"image/png\",\n              },\n              {\n                href: \"/favicon-16x16.png\",\n                rel: \"icon\",\n                sizes: \"16x16\",\n                type: \"image/png\",\n              },\n              { rel: \"manifest\", href: \"/site.webmanifest\" },\n              {\n                color: theme.brand_color,\n                href: \"/safari-pinned-tab.svg\",\n                rel: \"mask-icon\",\n              },\n            ]}\n          />\n        );\n      }}\n    />\n  );\n};\n\nexport default SEO;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import * as React from \"react\";\n\ninterface FooterItemProps {\n  text: string;\n  link?: string;\n  hasSeparator?: boolean;\n}\n\nconst FooterItem = (props: FooterItemProps) => {\n  const linkIsValid = props.link !== undefined && props.link.length > 0;\n  const className = \"h6 mx-3 text-uppercase\";\n  const style = { letterSpacing: \"1px\" };\n\n  const Content = (subProps: FooterItemProps) => (\n    <p className={className} style={style}>\n      <small>{subProps.text}</small>\n    </p>\n  );\n\n  const Next = (subProps: FooterItemProps) => {\n    if (linkIsValid) {\n      return (\n        <a href={subProps.link}>\n          <Content {...props} />\n        </a>\n      );\n    } else {\n      return <Content {...subProps} />;\n    }\n  };\n\n  const Separator = (subProps: FooterItemProps) => {\n    if (props.hasSeparator === true) {\n      return (\n        <div className=\"d-flex align-items-baseline\">\n          <small className=\"text-muted\">&#124;</small>\n          <Next {...subProps} />\n        </div>\n      );\n    } else {\n      return <Next {...subProps} />;\n    }\n  };\n\n  return <Separator {...props} />;\n};\n\ninterface FooterRowProps {\n  children: React.ReactNode;\n  marginTop?: number;\n}\n\nconst FooterRow = (props: FooterRowProps) => (\n  <div\n    className={`d-flex justify-content-center align-items-center mt-${props.marginTop ||\n      1}`}\n  >\n    {props.children}\n  </div>\n);\n\nconst Footer = () => (\n  <footer className=\"mt-5\">\n    <FooterRow>\n      <FooterItem text={`© ${new Date().getFullYear()} Andrew Simms`} />\n    </FooterRow>\n    <FooterRow>\n      <FooterItem text=\"Email\" link=\"mailto:simms.andrew@gmail.com\" />\n      <FooterItem\n        text=\"Github\"\n        link=\"https://github.com/simmsa\"\n        hasSeparator={true}\n      />\n      <FooterItem\n        text=\"Twitter\"\n        link=\"https://twitter.com/andrewdsimms\"\n        hasSeparator={true}\n      />\n    </FooterRow>\n    <FooterRow>\n      <FooterItem text={\"Built With Gatsby\"} link=\"https://www.gatsbyjs.org/\" />\n    </FooterRow>\n  </footer>\n);\n\nexport default Footer;\n","import * as React from \"react\";\n\nimport { graphql, StaticQuery } from \"gatsby\";\nimport Img from \"gatsby-image\";\n\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\n\nimport theme from \"../theme\";\n\ninterface HeaderProps {\n  siteTitle: string;\n}\n\ninterface HeaderTextProps {\n  children: string;\n  isUppercase?: boolean;\n}\n\nconst HeaderText = (props: HeaderTextProps) => (\n  <span\n    className={`${props.isUppercase === false ? \"\" : \"text-uppercase\"} small`}\n    style={{\n      letterSpacing: props.isUppercase === false ? \"0px\" : \"1px\",\n    }}\n  >\n    {props.children}\n  </span>\n);\n\nconst Header = (props: HeaderProps) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        file(relativePath: { eq: \"images/Andrew-Simms.jpg\" }) {\n          childImageSharp {\n            fixed(width: 30, height: 30) {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n    `}\n    render={(data) => (\n      <header\n        style={{\n          background: theme.brand_color,\n        }}\n        className={\"mb-5\"}\n      >\n        <Navbar\n          variant=\"dark\"\n          style={{\n            backgroundColor: theme.brand_color,\n            margin: \"0 auto\",\n            maxWidth: \"960px\",\n          }}\n          className=\"d-flex\"\n          expand=\"sm\"\n        >\n          <Navbar.Brand\n            href=\"/\"\n            className=\"d-flex flex-grow-1 align-items-center\"\n          >\n            <Img\n              fixed={data.file.childImageSharp.fixed}\n              className=\"rounded-circle mr-3 d-none d-md-block\"\n              alt=\"Andrew Simms\"\n            />\n            <HeaderText isUppercase={false}>{props.siteTitle}</HeaderText>\n          </Navbar.Brand>\n\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n          <Navbar.Collapse bsPrefix=\"navbar-collapse d-flex justify-content-end\">\n            <Nav>\n              <Nav.Link href=\"/about/\" className=\"d-flex align-items-center\">\n                <HeaderText>About</HeaderText>\n              </Nav.Link>\n              <Nav.Link href=\"/blog/\" className=\"d-flex align-items-center\">\n                <HeaderText>Blog</HeaderText>\n              </Nav.Link>\n              <Nav.Link href=\"/projects/\" className=\"d-flex align-items-center\">\n                <HeaderText>Projects</HeaderText>\n              </Nav.Link>\n              <Nav.Link\n                href=\"/photography/\"\n                className=\"d-flex align-items-center\"\n              >\n                <HeaderText>Photography</HeaderText>\n              </Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n      </header>\n    )}\n  />\n);\n\nexport default Header;\n","import { graphql, StaticQuery } from \"gatsby\";\nimport * as React from \"react\";\n\nimport \"../../lib/bootstrap/bootstrap.css\";\n\nimport Footer from \"./Footer\";\nimport Header from \"./Header\";\nimport SEO from \"./Seo\";\n\ninterface LayoutProps {\n  children: React.ReactNode;\n  title?: string;\n}\n\nconst Layout = (props: LayoutProps) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={(data) => (\n      <>\n        <SEO title={props.title || data.site.siteMetadata.title} />\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{props.children}</main>\n          <Footer />\n        </div>\n      </>\n    )}\n  />\n);\n\nexport default Layout;\n"],"sourceRoot":""}